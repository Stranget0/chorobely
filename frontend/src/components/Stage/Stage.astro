---
import type { Stage } from "../../types";
import Card from "../Card/Card.astro";

interface Props extends Stage {
  initiallyShown: boolean;
}

const { options, priceMod, title, initiallyShown } = Astro.props;
---

<script>
  import useMainPageStore, {
    subscribeToCurrentStage,
  } from "../../stores/mainPage/mainPage";

  import { Cards } from "../Card/Cards";

  const { selectCard, initialize } = useMainPageStore.getState();

  let cleanCards: VoidFunction | null = null;
  subscribeToCurrentStage((stage, prevStage) => {
    cleanCards?.();
    if (prevStage) {
      prevStage.classList.add("hidden");
    }
    if (stage) {
      stage.classList.remove("hidden");
      const cards = Cards.getFrom(stage);
      cleanCards = cards.addHandlers("click", selectCard);
    } else console.error("No stage found")
  });

  initialize(Array.from(document.querySelectorAll(".stage")));
</script>

<div
  class:list={[
    "stage",
    "absolute",
    "bottom-2",
    "left-0",
    "right-0",
    "top-32",
    "flex",
    "flex-col",
    "justify-between",
    { hidden: !initiallyShown },
  ]}
>
  <h2 class='mb-auto'>{title}</h2>
  <div class='flex mb-auto motion-safe:animate-appear w-full justify-center flex-wrap gap-4 px-2'>
    {options.map((card) => <Card {...card} priceMod={priceMod} />)}
  </div>
</div>
